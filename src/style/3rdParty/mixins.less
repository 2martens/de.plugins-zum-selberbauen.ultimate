@import 'variables.less';
/* shortcuts */

.square(@size) {
	height: @size;
	width: @size;
}


// sets default text shadows depending on background color
.textShadow(@backgroundColor) when (lightness(@backgroundColor) >= 40%) {
	text-shadow: 0 1px 0 rgba(255, 255, 255, .5);
}
.textShadow(@backgroundColor) when (60% > lightness(@backgroundColor)) {
	text-shadow: 0 -1px 0 rgba(0, 0, 0, .5);
}

/* CSS 3 */
.linearGradient(@backgroundColor, @gradientColor1, @gradientColor2) {
	background-color: @backgroundColor;
	background-image: -webkit-linear-gradient(@gradientColor1, @gradientColor2);
	background-image: -moz-linear-gradient(@gradientColor1, @gradientColor2);
	background-image: -o-linear-gradient(@gradientColor1, @gradientColor2);
	background-image: -ms-linear-gradient(@gradientColor1, @gradientColor2);
	background-image: linear-gradient(@gradientColor1, @gradientColor2);
}

.linearGradient(@backgroundColor, @gradientColor1, @gradientColor2, @gradientColor3, @direction: top) {
	background-color: @backgroundColor;
	background-image: -webkit-linear-gradient(@direction, @gradientColor1, @gradientColor2, @gradientColor3);
	background-image: -moz-linear-gradient(@direction, @gradientColor1, @gradientColor2, @gradientColor3);
	background-image: -o-linear-gradient(@direction, @gradientColor1, @gradientColor2, @gradientColor3);
	background-image: -ms-linear-gradient(@direction, @gradientColor1, @gradientColor2, @gradientColor3);
	background-image: linear-gradient(@direction, @gradientColor1, @gradientColor2, @gradientColor3);
}

.linearGradientNative(@parameters) {
	background-image: -webkit-linear-gradient(@parameters);
	background-image: -moz-linear-gradient(@parameters);
	background-image: -o-linear-gradient(@parameters);
	background-image: -ms-linear-gradient(@parameters);
	background-image: linear-gradient(@parameters);
}

.transition(@property, @duration, @type: linear) {
	-webkit-transition: @arguments;
	-moz-transition: @arguments;
	-ms-transition: @arguments;
	-o-transition: @arguments;
	transition: @arguments;
}
.transitionMultiple(@properties1, @properties2) {
	-webkit-transition: @arguments;
	-moz-transition: @arguments;
	-ms-transition: @arguments;
	-o-transition: @arguments;
	transition: @arguments;
}
.transitionMultiple(@properties1, @properties2, @properties3) {
	-webkit-transition: @arguments;
	-moz-transition: @arguments;
	-ms-transition: @arguments;
	-o-transition: @arguments;
	transition: @arguments;
}

.boxShadow(@topOffset, @leftOffset, @color, @blurriness: 5px, @shadowHeight: 0) {
	-webkit-box-shadow: @topOffset @leftOffset @blurriness @shadowHeight @color;
	-moz-box-shadow: @topOffset @leftOffset @blurriness @shadowHeight @color;
	-ms-box-shadow: @topOffset @leftOffset @blurriness @shadowHeight @color;
	-o-box-shadow: @topOffset @leftOffset @blurriness @shadowHeight @color;
	box-shadow: @topOffset @leftOffset @blurriness @shadowHeight @color;
}

.boxShadowInset(@topOffset, @leftOffset, @color, @blurriness: 5px, @shadowHeight: 0) {
	-webkit-box-shadow: inset @topOffset @leftOffset @blurriness @shadowHeight @color;
	-moz-box-shadow: inset @topOffset @leftOffset @blurriness @shadowHeight @color;
	-ms-box-shadow: inset @topOffset @leftOffset @blurriness @shadowHeight @color;
	-o-box-shadow: inset @topOffset @leftOffset @blurriness @shadowHeight @color;
	box-shadow: inset @topOffset @leftOffset @blurriness @shadowHeight @color;
}

.boxShadowNative(@parameters) {
	-webkit-box-shadow: @parameters;
	-moz-box-shadow: @parameters;
	-ms-box-shadow: @parameters;
	-o-box-shadow: @parameters;
	box-shadow: @parameters;
}
.boxShadowNativeE(@parameters) {
	-webkit-box-shadow: e(@parameters);
	-moz-box-shadow: e(@parameters);
	-ms-box-shadow: e(@parameters);
	-o-box-shadow: e(@parameters);
	box-shadow: e(@parameters);
}

.borderRadius(@borderRadius: @wcfContainerBorderRadius) {
	border-radius: @borderRadius;
}